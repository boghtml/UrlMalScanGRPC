// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: proto/url_service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CheckURLRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckURLRequest) Reset() {
	*x = CheckURLRequest{}
	mi := &file_proto_url_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckURLRequest) ProtoMessage() {}

func (x *CheckURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_url_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckURLRequest.ProtoReflect.Descriptor instead.
func (*CheckURLRequest) Descriptor() ([]byte, []int) {
	return file_proto_url_service_proto_rawDescGZIP(), []int{0}
}

func (x *CheckURLRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type CheckURLResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	IsMalicious   bool                   `protobuf:"varint,2,opt,name=is_malicious,json=isMalicious,proto3" json:"is_malicious,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckURLResponse) Reset() {
	*x = CheckURLResponse{}
	mi := &file_proto_url_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckURLResponse) ProtoMessage() {}

func (x *CheckURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_url_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckURLResponse.ProtoReflect.Descriptor instead.
func (*CheckURLResponse) Descriptor() ([]byte, []int) {
	return file_proto_url_service_proto_rawDescGZIP(), []int{1}
}

func (x *CheckURLResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CheckURLResponse) GetIsMalicious() bool {
	if x != nil {
		return x.IsMalicious
	}
	return false
}

func (x *CheckURLResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type FilterHTMLRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Html          string                 `protobuf:"bytes,1,opt,name=html,proto3" json:"html,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterHTMLRequest) Reset() {
	*x = FilterHTMLRequest{}
	mi := &file_proto_url_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterHTMLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterHTMLRequest) ProtoMessage() {}

func (x *FilterHTMLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_url_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterHTMLRequest.ProtoReflect.Descriptor instead.
func (*FilterHTMLRequest) Descriptor() ([]byte, []int) {
	return file_proto_url_service_proto_rawDescGZIP(), []int{2}
}

func (x *FilterHTMLRequest) GetHtml() string {
	if x != nil {
		return x.Html
	}
	return ""
}

type FilterHTMLResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FilteredHtml  string                 `protobuf:"bytes,1,opt,name=filtered_html,json=filteredHtml,proto3" json:"filtered_html,omitempty"`
	UrlResults    []*URLResult           `protobuf:"bytes,2,rep,name=url_results,json=urlResults,proto3" json:"url_results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterHTMLResponse) Reset() {
	*x = FilterHTMLResponse{}
	mi := &file_proto_url_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterHTMLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterHTMLResponse) ProtoMessage() {}

func (x *FilterHTMLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_url_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterHTMLResponse.ProtoReflect.Descriptor instead.
func (*FilterHTMLResponse) Descriptor() ([]byte, []int) {
	return file_proto_url_service_proto_rawDescGZIP(), []int{3}
}

func (x *FilterHTMLResponse) GetFilteredHtml() string {
	if x != nil {
		return x.FilteredHtml
	}
	return ""
}

func (x *FilterHTMLResponse) GetUrlResults() []*URLResult {
	if x != nil {
		return x.UrlResults
	}
	return nil
}

type URLResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	IsMalicious   bool                   `protobuf:"varint,2,opt,name=is_malicious,json=isMalicious,proto3" json:"is_malicious,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *URLResult) Reset() {
	*x = URLResult{}
	mi := &file_proto_url_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *URLResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLResult) ProtoMessage() {}

func (x *URLResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_url_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLResult.ProtoReflect.Descriptor instead.
func (*URLResult) Descriptor() ([]byte, []int) {
	return file_proto_url_service_proto_rawDescGZIP(), []int{4}
}

func (x *URLResult) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *URLResult) GetIsMalicious() bool {
	if x != nil {
		return x.IsMalicious
	}
	return false
}

func (x *URLResult) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_proto_url_service_proto protoreflect.FileDescriptor

const file_proto_url_service_proto_rawDesc = "" +
	"\n" +
	"\x17proto/url_service.proto\x12\n" +
	"urlservice\"#\n" +
	"\x0fCheckURLRequest\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\"_\n" +
	"\x10CheckURLResponse\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12!\n" +
	"\fis_malicious\x18\x02 \x01(\bR\visMalicious\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"'\n" +
	"\x11FilterHTMLRequest\x12\x12\n" +
	"\x04html\x18\x01 \x01(\tR\x04html\"q\n" +
	"\x12FilterHTMLResponse\x12#\n" +
	"\rfiltered_html\x18\x01 \x01(\tR\ffilteredHtml\x126\n" +
	"\vurl_results\x18\x02 \x03(\v2\x15.urlservice.URLResultR\n" +
	"urlResults\"X\n" +
	"\tURLResult\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12!\n" +
	"\fis_malicious\x18\x02 \x01(\bR\visMalicious\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason2\xa0\x01\n" +
	"\n" +
	"URLService\x12E\n" +
	"\bCheckURL\x12\x1b.urlservice.CheckURLRequest\x1a\x1c.urlservice.CheckURLResponse\x12K\n" +
	"\n" +
	"FilterHTML\x12\x1d.urlservice.FilterHTMLRequest\x1a\x1e.urlservice.FilterHTMLResponseB\tZ\a./protob\x06proto3"

var (
	file_proto_url_service_proto_rawDescOnce sync.Once
	file_proto_url_service_proto_rawDescData []byte
)

func file_proto_url_service_proto_rawDescGZIP() []byte {
	file_proto_url_service_proto_rawDescOnce.Do(func() {
		file_proto_url_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_url_service_proto_rawDesc), len(file_proto_url_service_proto_rawDesc)))
	})
	return file_proto_url_service_proto_rawDescData
}

var file_proto_url_service_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_url_service_proto_goTypes = []any{
	(*CheckURLRequest)(nil),    // 0: urlservice.CheckURLRequest
	(*CheckURLResponse)(nil),   // 1: urlservice.CheckURLResponse
	(*FilterHTMLRequest)(nil),  // 2: urlservice.FilterHTMLRequest
	(*FilterHTMLResponse)(nil), // 3: urlservice.FilterHTMLResponse
	(*URLResult)(nil),          // 4: urlservice.URLResult
}
var file_proto_url_service_proto_depIdxs = []int32{
	4, // 0: urlservice.FilterHTMLResponse.url_results:type_name -> urlservice.URLResult
	0, // 1: urlservice.URLService.CheckURL:input_type -> urlservice.CheckURLRequest
	2, // 2: urlservice.URLService.FilterHTML:input_type -> urlservice.FilterHTMLRequest
	1, // 3: urlservice.URLService.CheckURL:output_type -> urlservice.CheckURLResponse
	3, // 4: urlservice.URLService.FilterHTML:output_type -> urlservice.FilterHTMLResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_url_service_proto_init() }
func file_proto_url_service_proto_init() {
	if File_proto_url_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_url_service_proto_rawDesc), len(file_proto_url_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_url_service_proto_goTypes,
		DependencyIndexes: file_proto_url_service_proto_depIdxs,
		MessageInfos:      file_proto_url_service_proto_msgTypes,
	}.Build()
	File_proto_url_service_proto = out.File
	file_proto_url_service_proto_goTypes = nil
	file_proto_url_service_proto_depIdxs = nil
}
